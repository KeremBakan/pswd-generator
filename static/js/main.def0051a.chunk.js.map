{"version":3,"sources":["App.js","index.js"],"names":["App","useState","createdPasswordText","setCreatedPasswordText","specialCh","numbers","bigLetter","smallLetter","stringArr","className","onSubmit","e","preventDefault","htmlFor","type","min","required","role","onClick","allArr","concat","letterCount","document","querySelector","i","value","rndNum","Math","floor","random","String","fromCharCode","console","log","toString","replaceAll","length","data-tip","navigator","clipboard","writeText","style","fontSize","outline","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.def0051a.chunk.js","sourcesContent":["import { render } from '@testing-library/react';\nimport { useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport './App.css';\n\nfunction App() {\n\n  let [createdPasswordText, setCreatedPasswordText] = useState(\"\"); \n\n  let specialCh = [33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,58,59,60,61,62,63,64,91,92,93,94,95,96,123,124,125,126];\n  let numbers = [48,49,50,51,52,53,54,55,56,57];\n  let bigLetter = [65,66,67,68,69,70,71,72,73,74,75,76,78,79,80,81,82,83,84,85,86,87,88,89,90];\n  let smallLetter = [97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122];\n  let stringArr = [];\n\n  let createPswd_All = () => {\n    let allArr = specialCh.concat(numbers,bigLetter,smallLetter);\n    let letterCount = document.querySelector('.letterCountInput');\n\n    for(let i = 0; i < letterCount.value; i++){\n      //     stringArr[i] = String.fromCharCode(Math.random() * (58 - 33) + 33);\n    //      stringArr[i] = String.fromCharCode(Math.random() * (123 - 64) + 64);\n            let rndNum = Math.floor(Math.random() * 92) + 1;\n            stringArr[i] = String.fromCharCode(allArr[rndNum]);\n    \n    \n      }\n          console.log(stringArr)\n    \n          setCreatedPasswordText(stringArr.toString().replaceAll(',',''));\n\n  }\n\n  let createPswd_Letter = () => {\n    let allArr = bigLetter.concat(smallLetter);\n    let letterCount = document.querySelector('.letterCountInput');\n    for(let i = 0; i < letterCount.value; i++){\n //     stringArr[i] = String.fromCharCode(Math.random() * (58 - 33) + 33);\n//      stringArr[i] = String.fromCharCode(Math.random() * (123 - 64) + 64);\n        let rndNum = Math.floor(Math.random() * 50) + 1;\n        stringArr[i] = String.fromCharCode(allArr[rndNum]);\n\n\n  }\n      console.log(stringArr)\n\n      setCreatedPasswordText(stringArr.toString().replaceAll(',',''));\n  }\n\n  let createPswd_Number = () => {\n//    let allArr = bigLetter.concat(smallLetter);\n    let letterCount = document.querySelector('.letterCountInput');\n    for(let i = 0; i < letterCount.value; i++){\n //     stringArr[i] = String.fromCharCode(Math.random() * (58 - 33) + 33);\n//      stringArr[i] = String.fromCharCode(Math.random() * (123 - 64) + 64);\n        let rndNum = Math.floor(Math.random() * 9) + 1;\n        stringArr[i] = String.fromCharCode(numbers[rndNum]);\n\n\n  }\n      console.log(stringArr)\n\n      setCreatedPasswordText(stringArr.toString().replaceAll(',',''));\n  }\n\n  let createPswd_SpecialCh = () => {\n    //    let allArr = bigLetter.concat(smallLetter);\n        let letterCount = document.querySelector('.letterCountInput');\n        for(let i = 0; i < letterCount.value; i++){\n     //     stringArr[i] = String.fromCharCode(Math.random() * (58 - 33) + 33);\n    //      stringArr[i] = String.fromCharCode(Math.random() * (123 - 64) + 64);\n            let rndNum = Math.floor(Math.random() * 32) + 1;\n            stringArr[i] = String.fromCharCode(specialCh[rndNum]);\n    \n    \n      }\n          console.log(stringArr)\n    \n      setCreatedPasswordText(stringArr.toString().replaceAll(',',''));\n      }\n\n    let copyPswd = () => {\n      navigator.clipboard.writeText(createdPasswordText);\n    }\n\n  return (\n    <div className=\"App\">\n \n      <div className=\"container\">\n        <div className=\"row\">\n          <h1>Password Generator</h1>\n        </div>\n        <div className=\"row\">\n          <div className=\"col\"></div>\n          <div className=\"col\">\n        <form onSubmit={(e) => e.preventDefault()}>\n        <legend>Password Consists Of:</legend>\n        <div className=\"mb-3\">\n        <label htmlFor=\"letterCountInput\" className=\"form-label\">Password Length </label>\n        <input type=\"number\" min=\"0\" className=\"letterCountInput form-control\" required/>\n        </div>\n        <div className=\"mb-3\">\n        <div className=\"btn-group\" role=\"group\">\n            <button className=\"btn btn-outline-primary\" onClick={createPswd_All}>All</button>\n            <button className=\"btn btn-outline-primary\" onClick={createPswd_Letter}>Letter</button>\n            <button className=\"btn btn-outline-primary\" onClick={createPswd_Number}>Number</button>\n            <button className=\"btn btn-outline-primary\" onClick={createPswd_SpecialCh}>Special Character</button>\n        </div>\n        </div>\n   \n        </form>\n        <hr/>\n        </div>\n        <div className=\"col\"></div>\n        </div>\n        {createdPasswordText.length <= 0 ? \n        \n          <div></div>\n        \n        : \n        \n        <div>\n        <button type=\"text\" className=\"btn btn-primary btn-lg\" data-tip=\"Click to copy\" onClick={copyPswd} style={{fontSize:35,outline:'none'}} >{createdPasswordText}</button>        \n        <ReactTooltip />\n        </div>\n        }\n       \n\n\n        </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}